Actor TDBot_BaseAction : CustomInventory {+INVENTORY.AUTOACTIVATE}

Actor TDBot_Look : TDBot_BaseAction
{
	states
	{
	Use:
		TNT1 A 0 A_LookEx(0, 0, 0, 0, Accuracy, "")
		Stop
	}
}

Actor TDBot_ClearTarget : TDBot_BaseAction
{
	states
	{
	Use:
		TNT1 A 0 A_ClearTarget
		Stop
	}
}

Actor TDBot_RailVisual : TDBot_BaseAction
{
	states
	{
	Use:
		TNT1 A 0 A_CustomRailgun(0, 0, None, "FloralWhite", RGF_SILENT|RGF_FULLBRIGHT|RGF_CENTERZ, 1, 0, "TDBot_InvisiblePuff", 0, 0, Accuracy, 4, 1.0, 0.0)
		Stop
	}
}

/*=================================================================

		Order stuff

=================================================================*/
Actor TDBot_ToggleOrder : CustomInventory
{
	-INVBAR
	+INVENTORY.INTERHUBSTRIP
	states
	{
	Use:
		TNT1 A 0 A_TakeInventory("TDBot_GiveOrderPrint")
		TNT1 A 0 A_FireBullets(0, 0, 1, 0, "TDBot_OrderPuff", FBF_NORANDOM|FBF_NOFLASH)
		Fail
	}
}

Actor TDBot_InvisiblePuff
{
	+INVISIBLE
	+PAINLESS
	+BLOODLESSIMPACT
	+NOINTERACTION
	states
	{
	Spawn:
		TNT1 A 2
		Stop
	}
}

Actor TDBot_OrderPuff : TDBot_InvisiblePuff
{
	+HITTRACER
	+PUFFGETSOWNER
	+PUFFONACTORS
	states
	{
	Spawn:
	Melee:
		TNT1 A 0 NoDelay A_GiveInventory("TDBot_ActualOrderChange", 1, AAPTR_TRACER)
		TNT1 A 0 A_GiveInventory("TDBot_GiveOrderPrint", 1, AAPTR_TARGET)
		Goto Null
	
	Crash:
		Goto Null
	}
}

Actor TDBot_GiveOrderPrint : TDBot_BaseAction
{
	+CLIENTSIDEONLY
	states
	{
	Use:
		TNT1 A 0 A_Print("Order given.")
		Stop
	}
}

Actor TDBot_ActualOrderChange : TDBot_BaseAction
{
	+INVENTORY.AUTOACTIVATE
	states
	{
	Use:
		TNT1 A 0 A_JumpIfInventory("BotCurrentOrder", 1, "DisableOrder")
		TNT1 A 0 A_GiveInventory("BotCurrentOrder")
		Stop
	
	DisableOrder:
		TNT1 A 0 A_TakeInventory("BotCurrentOrder")
		Stop
	}
}
